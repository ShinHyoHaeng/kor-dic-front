{"version":3,"sources":["components/Result.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Result","seq","keyword","link","hanja","word_class","meaning","className","href","Search","name","id","value","selected","type","placeholder","Component","App","props","console","log","changeName","setState","state","loading","words","fetch","then","res","json","result","this","map","word","_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAWeA,MATf,YAAmE,IAAlDC,EAAiD,EAAjDA,IAAKC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,QACpD,OACI,sBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UAAuBL,EAAQ,8BAAMD,IAAU,mBAAGM,UAAU,QAAb,SAAsBH,IAArE,IAAgF,mBAAGI,KAAML,EAAT,0CAChF,oBAAGI,UAAU,cAAb,UAA2B,+BAAOF,IAAlC,IAAsDC,SCLrDG,EAAb,4JAGI,WACI,OACI,sBAAKF,UAAU,cAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,yBAAQG,KAAK,SAASH,UAAU,eAAeI,GAAG,SAAlD,UACI,wBAAQC,MAAM,OAAOC,UAAQ,EAA7B,0BACA,wBAAQF,GAAG,OAAOC,MAAM,OAAxB,0BACA,wBAAQD,GAAG,OAAOC,MAAM,OAAxB,0BACA,wBAAQD,GAAG,YAAYC,MAAM,YAA7B,+BAGR,qBAAKL,UAAU,kBAAf,SACI,uBAAOO,KAAK,OAAOC,YAAY,0DAAaL,KAAK,GAAGC,GAAG,SAASC,MAAM,GAAGL,UAAU,mBAEvF,qBAAKA,UAAU,mBAAf,SACI,uBAAOO,KAAK,SAASP,UAAU,eAAeG,KAAK,GAAGC,GAAG,SAASC,MAAM,0BAlB5F,GAA4BI,aAyBbP,ICuEAQ,E,kDAvFb,WAAYC,GAAO,IAAD,6BACdC,QAAQC,IAAI,gBACZ,cAAMF,IAQVG,WAAa,WACT,EAAKC,SAAS,CAACZ,KAAK,kBARpB,EAAKa,MAAQ,CACTC,SAAQ,EACRC,MAAM,IALI,E,qDAelB,WAAoB,IAAD,OAEfN,QAAQC,IAAI,SACZD,QAAQC,IAAI,qBAEZM,MAJiB,yDAKhBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFX,QAAQC,IAAIU,GACZ,IAAOL,EAASK,EAATL,MACP,EAAKH,SAAS,CAACE,SAAS,EAAOC,e,gCAMvC,WACIN,QAAQC,IAAI,Y,kCAIhB,WACID,QAAQC,IAAI,a,oBAGhB,WACI,MAAyBW,KAAKR,MAAvBC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAChB,OAAGD,EAEK,8BACI,8CAKN,sBAAKjB,UAAU,UAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,UAKZ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,cAAcI,GAAG,SAAhC,SACKc,EAAMO,KAAI,SAAAC,GACP,OACI,cAAC,EAAD,CAEIhC,IAAKgC,EAAKhC,IACVC,QAAS+B,EAAK/B,QACdC,KAAM8B,EAAK9B,KACXC,MAAO6B,EAAK7B,MACZC,WAAY4B,EAAK5B,WACjBC,QAAS2B,EAAK3B,SANT2B,EAAKC,uB,GArEpClB,aCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.81f6bf62.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Result({seq, keyword, link, hanja, word_class, meaning}) {\r\n    return (\r\n        <div className=\"item move-up\">\r\n            <div className=\"word\">{keyword}<sup>{seq}</sup><p className=\"hanja\">{hanja}</p> <a href={link}>더 보기  &raquo;</a></div>\r\n            <p className=\"description\"><span>{word_class}</span> {meaning}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React, { Component } from 'react'\r\nexport class Search extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searchInner\">\r\n                <div className=\"col-3 selectArea\">\r\n                    <select name=\"select\" className=\"form-control\" id=\"select\">\r\n                        <option value=\"none\" selected>전체</option>\r\n                        <option id=\"word\" value=\"word\">단어</option>\r\n                        <option id=\"mean\" value=\"mean\">의미</option>\r\n                        <option id=\"wordclass\" value=\"wordclass\">품사</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-6 inputArea\">\r\n                    <input type=\"text\" placeholder=\"단어를 입력해주세요\" name=\"\" id=\"search\" value=\"\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"col-3 buttonArea\">\r\n                    <input type=\"submit\" className=\"form-control\" name=\"\" id=\"submit\" value=\"검색\" />\r\n                </div>\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import './App.css'\nimport React, {Component} from 'react';\nimport Result from './components/Result'\nimport Search from './components/Search';\n\n\n\nclass App extends Component{\n  \n  // 생성자 함수\n  constructor(props){\n      console.log('constructor')\n      super(props)\n      this.state = {\n          loading:true,\n          words:[]\n      }\n  }\n\n  // 이벤트 핸들러 함수\n  changeName = () => {\n      this.setState({name:\"name changed\"})\n  }\n\n  // 컴포넌트가 생성되었을 때\n  componentDidMount(){\n      const BASE_URL = 'https://dictionary-search-kor.herokuapp.com/api/words';\n      console.log(\"mount\")\n      console.log(\"-----------------\")\n      // 서버에서 데이터 가져오기\n      fetch(BASE_URL)\n      .then(res => res.json())\n      .then(result => {\n          console.log(result)\n          const {words} = result\n          this.setState({loading: false, words})\n          \n      })\n  }\n\n  // 컴포넌트가 업데이트 되었을 때\n  componentDidUpdate(){\n      console.log(\"update\")\n  }\n\n  // 컴포넌트가 제거되었을 때\n  componentWillUnmount(){\n      console.log(\"unmount\")\n  }\n\n  render(){\n      const {loading, words} = this.state\n      if(loading){ // loading의 상태값이 true이면\n          return(\n              <div>\n                  <h1>loading...</h1>\n              </div>\n          )\n      }else{\n          return (\n            <div className=\"wrapper\">\n                <div className=\"searchArea\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Search/>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"resultArea\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"resultInner\" id=\"result\" >\n                                {words.map(word => {\n                                    return(\n                                        <Result\n                                            key={word._id}\n                                            seq={word.seq}\n                                            keyword={word.keyword}\n                                            link={word.link}\n                                            hanja={word.hanja}\n                                            word_class={word.word_class}\n                                            meaning={word.meaning}\n                                        >\n                                        </Result>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          )\n      } \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}